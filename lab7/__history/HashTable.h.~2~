//---------------------------------------------------------------------------
#include "Stack.h"
#ifndef HashTableH
#define HashTableH
class HashTable{
	private:
	int size;
	Stack* hashes;
	public:
	HashTable(int size){
		this->size = size;
		hashes = new Stack[size];
		for (int i = 0; i < size; i++) {
			hashes[i] =  Stack();
		}
	}
	Stack* GetStack(int key){
		return &hashes[key % size];
	}
	void Add(int key){
		Stack* stack = &hashes[key % size];
		stack->Push(key);
	}
	void Remove(int key){
		Stack* stack = &hashes[key % size];
		if (stack->GetKey()) {
			while (stack->GetKey() && stack->GetKey() == key){
				stack->Pop();
			}



		}

	}


};
//---------------------------------------------------------------------------
#endif

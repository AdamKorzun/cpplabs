//---------------------------------------------------------------------------

#ifndef TreeH
#define TreeH
#include <vcl.h>
class Tree {
	protected:
	class Node{
		protected:
		String fio;
		int passNum;
		Node* left;
		Node* right;
		public:
		Node(String fio, int passNum){
			this->fio = fio;
			this->passNum = passNum;
			left = NULL;
			right = NULL;
		}
		void Print(TTreeView* treeView,TMemo* memo){
			if (left) {
				left->Print(treeView, memo);
			}
			memo->Lines->Add(fio + ":" + IntToStr(passNum));
			if (right) {
				right->Print(treeView, memo);
			}
		}
		void Insert(String fio,int passNum){
			if (passNum > this->passNum && right) {
				right->Insert(fio, passNum);
			}
			else if(passNum > this->passNum && !right){
				right = new Node(fio, passNum);
			}
			else if(passNum < this->passNum && left){
				left->Insert(fio,passNum);
			}
			else {
                left = new Node(fio, passNum);
            }
		}

	};
	Node* root;
	public:
	Tree(){
		root = NULL;
	}
	void Print(TTreeView* treeView, TMemo* memo){
		root->Print(treeView, memo);
	}
	void Insert(String fio, int passNum){
		if (!root) {
			root = new Node(fio, passNum);
		}
		else {
			root->Insert(fio,passNum);
		}
	}


};
//---------------------------------------------------------------------------
#endif

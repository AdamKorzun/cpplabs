//---------------------------------------------------------------------------

#pragma hdrstop

#include "Container.h"
Container::Container(){
	length = 0;
}
Container::Container(int length){
	this->length = length;
	playerArray = new Player[length];
}
void Container::Add(Player newPlayer){
	int newLength = length + 1;
	Player *tempArray = new Player[length];
	for (int i = 0; i < length; i++) {
		tempArray[i] = playerArray[i];
	}
	playerArray = new Player[newLength];
	for(int i = 0; i < length;i++){
		playerArray[i] = tempArray[i];
	}
	playerArray[newLength - 1] = newPlayer;
	length++;
	delete[] tempArray;

}
Player Container::Search(UnicodeString name){
	for (int i = 0; i < length; i++) {
		if (name == playerArray[i].GetName()) {
			return playerArray[i];
		}
	}
}
int Container::GetLength(){
	return length;
}
//---------------------------------------------------------------------------
#pragma package(smart_init)
